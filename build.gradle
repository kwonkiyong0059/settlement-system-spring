plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.sparta'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()  // Maven Central을 사용
}

dependencies {
    // Spring Boot 스타터 의존성
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // Lombok 의존성
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JSON 관련 라이브러리
    implementation 'com.fasterxml.jackson.module:jackson-module-parameter-names'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'org.json:json:20210307'

    // JWT 라이브러리
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // MySQL 커넥터
    runtimeOnly 'com.mysql:mysql-connector-j'

    // 테스트 관련 라이브러리
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mockito:mockito-core'

    // JUnit 플랫폼 런처
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Spring Batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.batch:spring-batch-core:5.0.0'
}

tasks.named('test') {
    useJUnitPlatform()
}
